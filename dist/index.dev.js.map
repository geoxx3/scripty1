{"version":3,"sources":["index.js"],"names":["express","require","ejsMate","mongoose","session","flash","path","dotenv","passport","ExpressError","LocalStrategy","User","helmet","isLoggedIn","userRoutes","MongoDBStore","config","DB","process","env","DATABASE","connect","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","then","console","log","db","connection","on","error","bind","once","app","engine","set","join","__dirname","use","urlencoded","extended","secret","SECRET","store","url","touchafter","e","sessionConfig","name","resave","saveUninitialized","cookie","httpOnly","expires","Date","now","maxAge","initialize","authenticate","serializeUser","deserializeUser","req","res","next","locals","currentUser","user","success","get","render","all","listen"],"mappings":";;AAAA;;;AAIA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAE,eAAF,CAArB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMQ,YAAY,GAAGR,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAMS,aAAa,GAAGT,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMU,IAAI,GAAGV,OAAO,CAAE,eAAF,CAApB;;AACA,IAAMW,MAAM,GAAGX,OAAO,CAAC,QAAD,CAAtB;;eACqBA,OAAO,CAAC,cAAD,C;IAArBY,U,YAAAA,U;;AACP,IAAMC,UAAU,GAAGb,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAMc,YAAY,GAAGd,OAAO,CAAC,eAAD,CAAP,CAAyBG,OAAzB,CAArB;;AAEAG,MAAM,CAACS,MAAP,CAAc;AAAEV,EAAAA,IAAI,EAAE;AAAR,CAAd;AAEA,IAAMW,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,gCAAnC;AAEAjB,QAAQ,CACLkB,OADH,CACWJ,EADX,EACe;AACXK,EAAAA,eAAe,EAAE,IADN;AAEXC,EAAAA,kBAAkB,EAAE,IAFT;AAGXC,EAAAA,cAAc,EAAE,IAHL;AAIXC,EAAAA,gBAAgB,EAAE;AAJP,CADf,EAOGC,IAPH,CAOQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN;AAAA,CAPR;AASA,IAAMC,EAAE,GAAG1B,QAAQ,CAAC2B,UAApB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeJ,OAAO,CAACK,KAAR,CAAcC,IAAd,CAAmBN,OAAnB,EAA4B,mBAA5B,CAAf;AACAE,EAAE,CAACK,IAAH,CAAQ,MAAR,EAAgB,YAAM;AAClBP,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,CAFD;AAIA,IAAMO,GAAG,GAAGnC,OAAO,EAAnB;AAEAmC,GAAG,CAACC,MAAJ,CAAW,KAAX,EAAkBlC,OAAlB;AACAiC,GAAG,CAACE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAF,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiB/B,IAAI,CAACgC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAjB;AAEAJ,GAAG,CAACK,GAAJ,CAAQxC,OAAO,CAACyC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQxC,OAAO,UAAP,CAAeM,IAAI,CAACgC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEA,IAAMI,MAAM,GAAGzB,OAAO,CAACC,GAAR,CAAYyB,MAAZ,IAAsB,4BAArC;AAEA,IAAMC,KAAK,GAAG,IAAI9B,YAAJ,CAAiB;AAC3B+B,EAAAA,GAAG,EAAE7B,EADsB;AAE3B0B,EAAAA,MAAM,EAANA,MAF2B;AAG3BI,EAAAA,UAAU,EAAE,KAAK,EAAL,GAAS;AAHM,CAAjB,CAAd;AAMAF,KAAK,CAACd,EAAN,CAAS,OAAT,EAAkB,UAAUiB,CAAV,EAAa;AAC3BrB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCoB,CAAnC;AACH,CAFD;AAIA,IAAMC,aAAa,GAAG;AAClBJ,EAAAA,KAAK,EAALA,KADkB;AAElBK,EAAAA,IAAI,EAAE,MAFY;AAGlBP,EAAAA,MAAM,EAANA,MAHkB;AAIlBQ,EAAAA,MAAM,EAAE,KAJU;AAKlBC,EAAAA,iBAAiB,EAAE,IALD;AAMlBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,IADN;AAEJ;AACAC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL,KAAa,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,CAHxC;AAIJC,IAAAA,MAAM,EAAE,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB;AAJ1B;AANU,CAAtB;AAcAvB,GAAG,CAACK,GAAJ,CAAQpC,OAAO,CAAC6C,aAAD,CAAf;AACAd,GAAG,CAACK,GAAJ,CAAQnC,KAAK,EAAb,E,CACA;;AAEA8B,GAAG,CAACK,GAAJ,CAAQhC,QAAQ,CAACmD,UAAT,EAAR;AACAxB,GAAG,CAACK,GAAJ,CAAQhC,QAAQ,CAACJ,OAAT,EAAR;AACAI,QAAQ,CAACgC,GAAT,CAAa,IAAI9B,aAAJ,CAAkBC,IAAI,CAACiD,YAAL,EAAlB,CAAb;AAEApD,QAAQ,CAACqD,aAAT,CAAuBlD,IAAI,CAACkD,aAAL,EAAvB;AACArD,QAAQ,CAACsD,eAAT,CAAyBnD,IAAI,CAACmD,eAAL,EAAzB;AAEA3B,GAAG,CAACK,GAAJ,CAAQ,UAACuB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzB;AACCD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,WAAX,GAAyBJ,GAAG,CAACK,IAA7B;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWG,OAAX,GAAqBN,GAAG,CAAC1D,KAAJ,CAAU,SAAV,CAArB;AACA2D,EAAAA,GAAG,CAACE,MAAJ,CAAWlC,KAAX,GAAmB+B,GAAG,CAAC1D,KAAJ,CAAU,OAAV,CAAnB;AACA4D,EAAAA,IAAI;AACP,CAND;AAQA9B,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa1B,UAAb;AAEAqB,GAAG,CAACmC,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACO,MAAJ,CAAW,OAAX;AACH,CAFD;AAGApC,GAAG,CAACmC,GAAJ,CAAQ,UAAR,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,MAAJ,CAAW,SAAX;AACH,CAFD;AAGApC,GAAG,CAACmC,GAAJ,CAAQ,UAAR,EAAoB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACO,MAAJ,CAAW,SAAX;AACH,CAFD;AAGApC,GAAG,CAACmC,GAAJ,CAAQ,OAAR,EAAiBzD,UAAjB,EAA6B,UAACkD,GAAD,EAAMC,GAAN,EAAc;AACvCA,EAAAA,GAAG,CAACO,MAAJ,CAAW,MAAX;AACH,CAFD;AAIA;;;;AAIA;;;;AAIApC,GAAG,CAACmC,GAAJ,CAAQ,OAAR,EAAiB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACO,MAAJ,CAAW,MAAX;AACH,CAFD;AAIApC,GAAG,CAACmC,GAAJ,CAAQ,OAAR,EAAiB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACO,MAAJ,CAAW,MAAX;AACH,CAFD;AAGApC,GAAG,CAACqC,GAAJ,CAAQ,GAAR,EAAa,UAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BA,EAAAA,IAAI,CAAC,IAAIxD,YAAJ,CAAiB,gBAAjB,EAAmC,GAAnC,CAAD,CAAJ;AACH,CAFD;AAIA;;;;;;AAMA0B,GAAG,CAACsC,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB9C,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,CAFD","sourcesContent":["/* if (process.env.NODE_ENV !== \"production\") {\r\n    require('dotenv').config();\r\n} */\r\n\r\nconst express = require('express')\r\nconst ejsMate = require('ejs-mate')\r\nconst mongoose = require('mongoose')\r\nconst session = require('express-session')\r\nconst flash = require ('connect-flash')\r\nconst path = require('path')\r\nconst dotenv = require('dotenv')\r\nconst passport = require('passport')\r\nconst ExpressError = require('./utils/ExpressError');\r\nconst LocalStrategy = require('passport-local')\r\nconst User = require ('./models/user')\r\nconst helmet = require('helmet')\r\nconst {isLoggedIn} = require('./middleware')\r\nconst userRoutes = require('./routes/users')\r\nconst MongoDBStore = require(\"connect-mongo\")(session)\r\n\r\ndotenv.config({ path: './config.env' });\r\n\r\nconst DB = process.env.DATABASE || 'mongodb://localhost:27017/auth'\r\n\r\nmongoose\r\n  .connect(DB, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useCreateIndex: true,\r\n    useFindAndModify: false\r\n  })\r\n  .then(() => console.log('DB connection successful!'));\r\n\r\nconst db = mongoose.connection;\r\ndb.on(\"error\", console.error.bind(console, \"connection error:\"));\r\ndb.once(\"open\", () => {\r\n    console.log(\"Database connected\");\r\n});\r\n\r\nconst app = express()\r\n\r\napp.engine('ejs', ejsMate)\r\napp.set('view engine', 'ejs')\r\napp.set('views', path.join(__dirname, '/views'))\r\n\r\napp.use(express.urlencoded({ extended: true }))\r\napp.use(express.static(path.join(__dirname, 'public')))\r\n\r\nconst secret = process.env.SECRET || 'thisshouldbeabettersecret!'\r\n\r\nconst store = new MongoDBStore({\r\n    url: DB,\r\n    secret,\r\n    touchafter: 24 * 60 *60\r\n})\r\n\r\nstore.on('error', function (e) {\r\n    console.log('SESSION STORE ERROR', e)\r\n})\r\n\r\nconst sessionConfig = {\r\n    store,\r\n    name: 'name',\r\n    secret,\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: {\r\n        httpOnly: true,\r\n        //secure: true,\r\n        expires: Date.now() + 1000 * 60 * 60 * 24 * 7,\r\n        maxAge: 1000 * 60 * 60 * 24 * 7\r\n    }\r\n}\r\n\r\napp.use(session(sessionConfig))\r\napp.use(flash());\r\n//app.use(helmet())\r\n\r\napp.use(passport.initialize());\r\napp.use(passport.session())\r\npassport.use(new LocalStrategy(User.authenticate()))\r\n\r\npassport.serializeUser(User.serializeUser())\r\npassport.deserializeUser(User.deserializeUser())\r\n\r\napp.use((req, res, next) => {\r\n   // console.log(req.session)\r\n    res.locals.currentUser = req.user;\r\n    res.locals.success = req.flash('success');\r\n    res.locals.error = req.flash('error');\r\n    next();\r\n})\r\n\r\napp.use('/', userRoutes)\r\n\r\napp.get('/', (req, res) => {\r\n    res.render('index') \r\n}) \r\napp.get('/pricing', (req, res) => {\r\n    res.render('pricing')\r\n}) \r\napp.get('/contact', (req, res) => {\r\n    res.render('contact')\r\n}) \r\napp.get('/user', isLoggedIn, (req, res) => {\r\n    res.render('user')\r\n}) \r\n\r\n/* app.get('/login', (req, res) => {\r\n    res.render('login')\r\n}) */\r\n\r\n/* app.get('/register', (req, res) => {\r\n    res.render('register')\r\n})  */\r\n\r\napp.get('/strl', (req, res) => {\r\n    res.render('strl')\r\n}) \r\n\r\napp.get('/strs', (req, res) => {\r\n    res.render('strs')\r\n})\r\napp.all('*', (req, res, next) => {\r\n    next(new ExpressError('Page Not Found', 404))\r\n})\r\n\r\n/* app.use((err, req, res, next) => {\r\n    const { statusCode = 500 } = err;\r\n    if (!err.message) err.message = 'Oh No, Something Went Wrong!'\r\n    res.status(statusCode).render('error', { err })\r\n})  */\r\n\r\napp.listen(5000, () => {\r\n    console.log('listening at 5000')\r\n})"],"file":"index.dev.js"}